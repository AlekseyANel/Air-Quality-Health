{"ast":null,"code":"export default function slideTo(index, speed, runCallbacks, internal) {\n  if (index === void 0) {\n    index = 0;\n  }\n\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n\n  var swiper = this;\n  var slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  var params = swiper.params,\n      snapGrid = swiper.snapGrid,\n      slidesGrid = swiper.slidesGrid,\n      previousIndex = swiper.previousIndex,\n      activeIndex = swiper.activeIndex,\n      rtl = swiper.rtlTranslate,\n      wrapperEl = swiper.wrapperEl;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  var skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  var snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  var translate = -snapGrid[snapIndex]; // Update progress\n\n  swiper.updateProgress(translate); // Normalize slideIndex\n\n  if (params.normalizeSlideIndex) {\n    for (var i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  } // Directions locks\n\n\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  var direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset'; // Update Index\n\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex); // Update Height\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    swiper.updateSlidesClasses();\n\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n\n    return false;\n  }\n\n  if (params.cssMode) {\n    var isH = swiper.isHorizontal();\n    var t = -translate;\n\n    if (rtl) {\n      t = wrapperEl.scrollWidth - wrapperEl.offsetWidth - t;\n    }\n\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n    } else {\n      // eslint-disable-next-line\n      if (wrapperEl.scrollTo) {\n        var _wrapperEl$scrollTo;\n\n        wrapperEl.scrollTo((_wrapperEl$scrollTo = {}, _wrapperEl$scrollTo[isH ? 'left' : 'top'] = t, _wrapperEl$scrollTo.behavior = 'smooth', _wrapperEl$scrollTo));\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n    }\n\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n\n    if (!swiper.animating) {\n      swiper.animating = true;\n\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}","map":{"version":3,"sources":["C:/Users/LeXa/Air-Quality-Health/node_modules/swiper/esm/components/core/slide/slideTo.js"],"names":["slideTo","index","speed","runCallbacks","internal","params","swiper","slideIndex","snapGrid","slidesGrid","previousIndex","activeIndex","rtl","rtlTranslate","wrapperEl","animating","preventInteractionOnTransition","skip","Math","min","slidesPerGroupSkip","snapIndex","floor","slidesPerGroup","length","initialSlide","emit","translate","updateProgress","normalizeSlideIndex","i","initialized","allowSlideNext","minTranslate","allowSlidePrev","maxTranslate","direction","updateActiveIndex","autoHeight","updateAutoHeight","updateSlidesClasses","effect","setTranslate","transitionStart","transitionEnd","cssMode","isH","isHorizontal","t","scrollWidth","offsetWidth","scrollTo","_wrapperEl$scrollTo","behavior","setTransition","onSlideToWrapperTransitionEnd","e","destroyed","target","$wrapperEl","removeEventListener","addEventListener"],"mappings":"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","sourcesContent":["export default function slideTo(index, speed, runCallbacks, internal) {\n  if (index === void 0) {\n    index = 0;\n  }\n\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n\n  var swiper = this;\n  var slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  var params = swiper.params,\n      snapGrid = swiper.snapGrid,\n      slidesGrid = swiper.slidesGrid,\n      previousIndex = swiper.previousIndex,\n      activeIndex = swiper.activeIndex,\n      rtl = swiper.rtlTranslate,\n      wrapperEl = swiper.wrapperEl;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  var skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  var snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  var translate = -snapGrid[snapIndex]; // Update progress\n\n  swiper.updateProgress(translate); // Normalize slideIndex\n\n  if (params.normalizeSlideIndex) {\n    for (var i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  } // Directions locks\n\n\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  var direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset'; // Update Index\n\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex); // Update Height\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    swiper.updateSlidesClasses();\n\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n\n    return false;\n  }\n\n  if (params.cssMode) {\n    var isH = swiper.isHorizontal();\n    var t = -translate;\n\n    if (rtl) {\n      t = wrapperEl.scrollWidth - wrapperEl.offsetWidth - t;\n    }\n\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n    } else {\n      // eslint-disable-next-line\n      if (wrapperEl.scrollTo) {\n        var _wrapperEl$scrollTo;\n\n        wrapperEl.scrollTo((_wrapperEl$scrollTo = {}, _wrapperEl$scrollTo[isH ? 'left' : 'top'] = t, _wrapperEl$scrollTo.behavior = 'smooth', _wrapperEl$scrollTo));\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n    }\n\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n\n    if (!swiper.animating) {\n      swiper.animating = true;\n\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}"]},"metadata":{},"sourceType":"module"}