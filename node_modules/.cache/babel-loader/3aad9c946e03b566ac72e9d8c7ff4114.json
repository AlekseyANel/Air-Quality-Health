{"ast":null,"code":"import { getWindow } from 'ssr-window';\nimport { extend } from '../../../utils/utils';\nexport default function updateSlides() {\n  var swiper = this;\n  var window = getWindow();\n  var params = swiper.params;\n  var $wrapperEl = swiper.$wrapperEl,\n      swiperSize = swiper.size,\n      rtl = swiper.rtlTranslate,\n      wrongRTL = swiper.wrongRTL;\n  var isVirtual = swiper.virtual && params.virtual.enabled;\n  var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  var slides = $wrapperEl.children(\".\" + swiper.params.slideClass);\n  var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  var snapGrid = [];\n  var slidesGrid = [];\n  var slidesSizesGrid = [];\n\n  function slidesForMargin(slideEl, slideIndex) {\n    if (!params.cssMode) return true;\n\n    if (slideIndex === slides.length - 1) {\n      return false;\n    }\n\n    return true;\n  }\n\n  var offsetBefore = params.slidesOffsetBefore;\n\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  var offsetAfter = params.slidesOffsetAfter;\n\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  var previousSnapGridLength = swiper.snapGrid.length;\n  var previousSlidesGridLength = swiper.snapGrid.length;\n  var spaceBetween = params.spaceBetween;\n  var slidePosition = -offsetBefore;\n  var prevSlideSize = 0;\n  var index = 0;\n\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween; // reset margins\n\n  if (rtl) slides.css({\n    marginLeft: '',\n    marginTop: ''\n  });else slides.css({\n    marginRight: '',\n    marginBottom: ''\n  });\n  var slidesNumberEvenToRows;\n\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  } // Calc slides\n\n\n  var slideSize;\n  var slidesPerColumn = params.slidesPerColumn;\n  var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  var numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n\n  for (var i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    var slide = slides.eq(i);\n\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      var newSlideOrderIndex = void 0;\n      var column = void 0;\n      var row = void 0;\n\n      if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\n        var groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\n        var slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\n        var columnsInGroup = groupIndex === 0 ? params.slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);\n        row = Math.floor(slideIndexInGroup / columnsInGroup);\n        column = slideIndexInGroup - row * columnsInGroup + groupIndex * params.slidesPerGroup;\n        newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;\n        slide.css({\n          '-webkit-box-ordinal-group': newSlideOrderIndex,\n          '-moz-box-ordinal-group': newSlideOrderIndex,\n          '-ms-flex-order': newSlideOrderIndex,\n          '-webkit-order': newSlideOrderIndex,\n          order: newSlideOrderIndex\n        });\n      } else if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - column * slidesPerColumn;\n\n        if (column > numFullColumns || column === numFullColumns && row === slidesPerColumn - 1) {\n          row += 1;\n\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - row * slidesPerRow;\n      }\n\n      slide.css(\"margin-\" + (swiper.isHorizontal() ? 'top' : 'left'), row !== 0 && params.spaceBetween && params.spaceBetween + \"px\");\n    }\n\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      var slideStyles = window.getComputedStyle(slide[0], null);\n      var currentTransform = slide[0].style.transform;\n      var currentWebKitTransform = slide[0].style.webkitTransform;\n\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          var width = parseFloat(slideStyles.getPropertyValue('width') || 0);\n          var paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left') || 0);\n          var paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right') || 0);\n          var marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left') || 0);\n          var marginRight = parseFloat(slideStyles.getPropertyValue('margin-right') || 0);\n          var boxSizing = slideStyles.getPropertyValue('box-sizing');\n\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          var height = parseFloat(slideStyles.getPropertyValue('height') || 0);\n          var paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top') || 0);\n          var paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom') || 0);\n          var marginTop = parseFloat(slideStyles.getPropertyValue('margin-top') || 0);\n          var marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom') || 0);\n\n          var _boxSizing = slideStyles.getPropertyValue('box-sizing');\n\n          if (_boxSizing && _boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = slideSize + \"px\";\n        } else {\n          slides[i].style.height = slideSize + \"px\";\n        }\n      }\n    }\n\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n\n    slidesSizesGrid.push(slideSize);\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  var newSlidesGrid;\n\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({\n      width: swiper.virtualSize + params.spaceBetween + \"px\"\n    });\n  }\n\n  if (params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({\n      width: swiper.virtualSize + params.spaceBetween + \"px\"\n    });else $wrapperEl.css({\n      height: swiper.virtualSize + params.spaceBetween + \"px\"\n    });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({\n      width: swiper.virtualSize + params.spaceBetween + \"px\"\n    });else $wrapperEl.css({\n      height: swiper.virtualSize + params.spaceBetween + \"px\"\n    });\n\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n\n      for (var _i = 0; _i < snapGrid.length; _i += 1) {\n        var slidesGridItem = snapGrid[_i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[_i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n\n      snapGrid = newSlidesGrid;\n    }\n  } // Remove last grid elements depending on width\n\n\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n\n    for (var _i2 = 0; _i2 < snapGrid.length; _i2 += 1) {\n      var _slidesGridItem = snapGrid[_i2];\n      if (params.roundLengths) _slidesGridItem = Math.floor(_slidesGridItem);\n\n      if (snapGrid[_i2] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(_slidesGridItem);\n      }\n    }\n\n    snapGrid = newSlidesGrid;\n\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.filter(slidesForMargin).css({\n        marginLeft: spaceBetween + \"px\"\n      });else slides.filter(slidesForMargin).css({\n        marginRight: spaceBetween + \"px\"\n      });\n    } else slides.filter(slidesForMargin).css({\n      marginBottom: spaceBetween + \"px\"\n    });\n  }\n\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    var allSlidesSize = 0;\n    slidesSizesGrid.forEach(function (slideSizeValue) {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    var maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(function (snap) {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n\n  if (params.centerInsufficientSlides) {\n    var _allSlidesSize = 0;\n    slidesSizesGrid.forEach(function (slideSizeValue) {\n      _allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    _allSlidesSize -= params.spaceBetween;\n\n    if (_allSlidesSize < swiperSize) {\n      var allSlidesOffset = (swiperSize - _allSlidesSize) / 2;\n      snapGrid.forEach(function (snap, snapIndex) {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach(function (snap, snapIndex) {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  extend(swiper, {\n    slides: slides,\n    snapGrid: snapGrid,\n    slidesGrid: slidesGrid,\n    slidesSizesGrid: slidesSizesGrid\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}","map":{"version":3,"sources":["C:/Users/LeXa/DevProject_01/air-quality-health/node_modules/swiper/esm/components/core/update/updateSlides.js"],"names":["getWindow","extend","updateSlides","swiper","window","params","$wrapperEl","swiperSize","size","rtl","rtlTranslate","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","length","children","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","slidesForMargin","slideEl","slideIndex","cssMode","offsetBefore","slidesOffsetBefore","call","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","index","indexOf","parseFloat","replace","virtualSize","css","marginLeft","marginTop","marginRight","marginBottom","slidesNumberEvenToRows","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slideSize","slidesPerRow","numFullColumns","i","slide","eq","newSlideOrderIndex","column","row","slidesPerGroup","groupIndex","slideIndexInGroup","columnsInGroup","min","order","isHorizontal","slideStyles","getComputedStyle","currentTransform","style","transform","currentWebKitTransform","webkitTransform","roundLengths","outerWidth","outerHeight","width","getPropertyValue","paddingLeft","paddingRight","boxSizing","height","paddingTop","paddingBottom","_boxSizing","swiperSlideSize","push","centeredSlides","abs","slidesPerGroupSkip","newSlidesGrid","effect","setWrapperSize","_i","slidesGridItem","_i2","_slidesGridItem","filter","centeredSlidesBounds","allSlidesSize","forEach","slideSizeValue","maxSnap","map","snap","centerInsufficientSlides","_allSlidesSize","allSlidesOffset","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset"],"mappings":"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","sourcesContent":["import { getWindow } from 'ssr-window';\nimport { extend } from '../../../utils/utils';\nexport default function updateSlides() {\n  var swiper = this;\n  var window = getWindow();\n  var params = swiper.params;\n  var $wrapperEl = swiper.$wrapperEl,\n      swiperSize = swiper.size,\n      rtl = swiper.rtlTranslate,\n      wrongRTL = swiper.wrongRTL;\n  var isVirtual = swiper.virtual && params.virtual.enabled;\n  var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  var slides = $wrapperEl.children(\".\" + swiper.params.slideClass);\n  var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  var snapGrid = [];\n  var slidesGrid = [];\n  var slidesSizesGrid = [];\n\n  function slidesForMargin(slideEl, slideIndex) {\n    if (!params.cssMode) return true;\n\n    if (slideIndex === slides.length - 1) {\n      return false;\n    }\n\n    return true;\n  }\n\n  var offsetBefore = params.slidesOffsetBefore;\n\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  var offsetAfter = params.slidesOffsetAfter;\n\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  var previousSnapGridLength = swiper.snapGrid.length;\n  var previousSlidesGridLength = swiper.snapGrid.length;\n  var spaceBetween = params.spaceBetween;\n  var slidePosition = -offsetBefore;\n  var prevSlideSize = 0;\n  var index = 0;\n\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween; // reset margins\n\n  if (rtl) slides.css({\n    marginLeft: '',\n    marginTop: ''\n  });else slides.css({\n    marginRight: '',\n    marginBottom: ''\n  });\n  var slidesNumberEvenToRows;\n\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  } // Calc slides\n\n\n  var slideSize;\n  var slidesPerColumn = params.slidesPerColumn;\n  var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  var numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n\n  for (var i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    var slide = slides.eq(i);\n\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      var newSlideOrderIndex = void 0;\n      var column = void 0;\n      var row = void 0;\n\n      if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\n        var groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\n        var slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\n        var columnsInGroup = groupIndex === 0 ? params.slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);\n        row = Math.floor(slideIndexInGroup / columnsInGroup);\n        column = slideIndexInGroup - row * columnsInGroup + groupIndex * params.slidesPerGroup;\n        newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;\n        slide.css({\n          '-webkit-box-ordinal-group': newSlideOrderIndex,\n          '-moz-box-ordinal-group': newSlideOrderIndex,\n          '-ms-flex-order': newSlideOrderIndex,\n          '-webkit-order': newSlideOrderIndex,\n          order: newSlideOrderIndex\n        });\n      } else if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - column * slidesPerColumn;\n\n        if (column > numFullColumns || column === numFullColumns && row === slidesPerColumn - 1) {\n          row += 1;\n\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - row * slidesPerRow;\n      }\n\n      slide.css(\"margin-\" + (swiper.isHorizontal() ? 'top' : 'left'), row !== 0 && params.spaceBetween && params.spaceBetween + \"px\");\n    }\n\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      var slideStyles = window.getComputedStyle(slide[0], null);\n      var currentTransform = slide[0].style.transform;\n      var currentWebKitTransform = slide[0].style.webkitTransform;\n\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          var width = parseFloat(slideStyles.getPropertyValue('width') || 0);\n          var paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left') || 0);\n          var paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right') || 0);\n          var marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left') || 0);\n          var marginRight = parseFloat(slideStyles.getPropertyValue('margin-right') || 0);\n          var boxSizing = slideStyles.getPropertyValue('box-sizing');\n\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          var height = parseFloat(slideStyles.getPropertyValue('height') || 0);\n          var paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top') || 0);\n          var paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom') || 0);\n          var marginTop = parseFloat(slideStyles.getPropertyValue('margin-top') || 0);\n          var marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom') || 0);\n\n          var _boxSizing = slideStyles.getPropertyValue('box-sizing');\n\n          if (_boxSizing && _boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = slideSize + \"px\";\n        } else {\n          slides[i].style.height = slideSize + \"px\";\n        }\n      }\n    }\n\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n\n    slidesSizesGrid.push(slideSize);\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  var newSlidesGrid;\n\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({\n      width: swiper.virtualSize + params.spaceBetween + \"px\"\n    });\n  }\n\n  if (params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({\n      width: swiper.virtualSize + params.spaceBetween + \"px\"\n    });else $wrapperEl.css({\n      height: swiper.virtualSize + params.spaceBetween + \"px\"\n    });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({\n      width: swiper.virtualSize + params.spaceBetween + \"px\"\n    });else $wrapperEl.css({\n      height: swiper.virtualSize + params.spaceBetween + \"px\"\n    });\n\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n\n      for (var _i = 0; _i < snapGrid.length; _i += 1) {\n        var slidesGridItem = snapGrid[_i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[_i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n\n      snapGrid = newSlidesGrid;\n    }\n  } // Remove last grid elements depending on width\n\n\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n\n    for (var _i2 = 0; _i2 < snapGrid.length; _i2 += 1) {\n      var _slidesGridItem = snapGrid[_i2];\n      if (params.roundLengths) _slidesGridItem = Math.floor(_slidesGridItem);\n\n      if (snapGrid[_i2] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(_slidesGridItem);\n      }\n    }\n\n    snapGrid = newSlidesGrid;\n\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.filter(slidesForMargin).css({\n        marginLeft: spaceBetween + \"px\"\n      });else slides.filter(slidesForMargin).css({\n        marginRight: spaceBetween + \"px\"\n      });\n    } else slides.filter(slidesForMargin).css({\n      marginBottom: spaceBetween + \"px\"\n    });\n  }\n\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    var allSlidesSize = 0;\n    slidesSizesGrid.forEach(function (slideSizeValue) {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    var maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(function (snap) {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n\n  if (params.centerInsufficientSlides) {\n    var _allSlidesSize = 0;\n    slidesSizesGrid.forEach(function (slideSizeValue) {\n      _allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    _allSlidesSize -= params.spaceBetween;\n\n    if (_allSlidesSize < swiperSize) {\n      var allSlidesOffset = (swiperSize - _allSlidesSize) / 2;\n      snapGrid.forEach(function (snap, snapIndex) {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach(function (snap, snapIndex) {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  extend(swiper, {\n    slides: slides,\n    snapGrid: snapGrid,\n    slidesGrid: slidesGrid,\n    slidesSizesGrid: slidesSizesGrid\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}"]},"metadata":{},"sourceType":"module"}