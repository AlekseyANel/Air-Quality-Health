{"ast":null,"code":"import { getWindow } from 'ssr-window';\nexport default function getBreakpoints(breakpoints) {\n  var window = getWindow(); // Get breakpoint for window width\n\n  if (!breakpoints) return undefined;\n  var breakpoint = false;\n  var points = Object.keys(breakpoints).map(function (point) {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      var minRatio = parseFloat(point.substr(1));\n      var value = window.innerHeight * minRatio;\n      return {\n        value: value,\n        point: point\n      };\n    }\n\n    return {\n      value: point,\n      point: point\n    };\n  });\n  points.sort(function (a, b) {\n    return parseInt(a.value, 10) - parseInt(b.value, 10);\n  });\n\n  for (var i = 0; i < points.length; i += 1) {\n    var _points$i = points[i],\n        point = _points$i.point,\n        value = _points$i.value;\n\n    if (value <= window.innerWidth) {\n      breakpoint = point;\n    }\n  }\n\n  return breakpoint || 'max';\n}","map":{"version":3,"sources":["C:/Users/LeXa/Air-Quality-Health/node_modules/swiper/esm/components/core/breakpoints/getBreakpoint.js"],"names":["getWindow","getBreakpoints","breakpoints","window","undefined","breakpoint","points","Object","keys","map","point","indexOf","minRatio","parseFloat","substr","value","innerHeight","sort","a","b","parseInt","i","length","_points$i","innerWidth"],"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,eAAe,SAASC,cAAT,CAAwBC,WAAxB,EAAqC;AAClD,MAAIC,MAAM,GAAGH,SAAS,EAAtB,CADkD,CACxB;;AAE1B,MAAI,CAACE,WAAL,EAAkB,OAAOE,SAAP;AAClB,MAAIC,UAAU,GAAG,KAAjB;AACA,MAAIC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYN,WAAZ,EAAyBO,GAAzB,CAA6B,UAAUC,KAAV,EAAiB;AACzD,QAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACC,OAAN,CAAc,GAAd,MAAuB,CAAxD,EAA2D;AACzD,UAAIC,QAAQ,GAAGC,UAAU,CAACH,KAAK,CAACI,MAAN,CAAa,CAAb,CAAD,CAAzB;AACA,UAAIC,KAAK,GAAGZ,MAAM,CAACa,WAAP,GAAqBJ,QAAjC;AACA,aAAO;AACLG,QAAAA,KAAK,EAAEA,KADF;AAELL,QAAAA,KAAK,EAAEA;AAFF,OAAP;AAID;;AAED,WAAO;AACLK,MAAAA,KAAK,EAAEL,KADF;AAELA,MAAAA,KAAK,EAAEA;AAFF,KAAP;AAID,GAdY,CAAb;AAeAJ,EAAAA,MAAM,CAACW,IAAP,CAAY,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC1B,WAAOC,QAAQ,CAACF,CAAC,CAACH,KAAH,EAAU,EAAV,CAAR,GAAwBK,QAAQ,CAACD,CAAC,CAACJ,KAAH,EAAU,EAAV,CAAvC;AACD,GAFD;;AAIA,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,MAAM,CAACgB,MAA3B,EAAmCD,CAAC,IAAI,CAAxC,EAA2C;AACzC,QAAIE,SAAS,GAAGjB,MAAM,CAACe,CAAD,CAAtB;AAAA,QACIX,KAAK,GAAGa,SAAS,CAACb,KADtB;AAAA,QAEIK,KAAK,GAAGQ,SAAS,CAACR,KAFtB;;AAIA,QAAIA,KAAK,IAAIZ,MAAM,CAACqB,UAApB,EAAgC;AAC9BnB,MAAAA,UAAU,GAAGK,KAAb;AACD;AACF;;AAED,SAAOL,UAAU,IAAI,KAArB;AACD","sourcesContent":["import { getWindow } from 'ssr-window';\nexport default function getBreakpoints(breakpoints) {\n  var window = getWindow(); // Get breakpoint for window width\n\n  if (!breakpoints) return undefined;\n  var breakpoint = false;\n  var points = Object.keys(breakpoints).map(function (point) {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      var minRatio = parseFloat(point.substr(1));\n      var value = window.innerHeight * minRatio;\n      return {\n        value: value,\n        point: point\n      };\n    }\n\n    return {\n      value: point,\n      point: point\n    };\n  });\n  points.sort(function (a, b) {\n    return parseInt(a.value, 10) - parseInt(b.value, 10);\n  });\n\n  for (var i = 0; i < points.length; i += 1) {\n    var _points$i = points[i],\n        point = _points$i.point,\n        value = _points$i.value;\n\n    if (value <= window.innerWidth) {\n      breakpoint = point;\n    }\n  }\n\n  return breakpoint || 'max';\n}"]},"metadata":{},"sourceType":"module"}